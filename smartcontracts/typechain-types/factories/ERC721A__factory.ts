/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721A, ERC721AInterface } from "../ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200109138038062001091833981016040819052620000349162000124565b60026200004283826200021d565b5060036200005182826200021d565b5050600160005550620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008757600080fd5b81516001600160401b0380821115620000a457620000a46200005f565b604051601f8301601f19908116603f01168101908282118183101715620000cf57620000cf6200005f565b81604052838152602092508683858801011115620000ec57600080fd5b600091505b83821015620001105785820183015181830184015290820190620000f1565b600093810190920192909252949350505050565b600080604083850312156200013857600080fd5b82516001600160401b03808211156200015057600080fd5b6200015e8683870162000075565b935060208501519150808211156200017557600080fd5b50620001848582860162000075565b9150509250929050565b600181811c90821680620001a357607f821691505b602082108103620001c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021857600081815260208120601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b038111156200023957620002396200005f565b62000251816200024a84546200018e565b84620001ca565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d9880620002f96000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610228578063b88d4fde14610248578063c87b56dd1461025b578063e985e9c51461027b57600080fd5b80636352211e146101d357806370a08231146101f357806395d89b411461021357600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101ad57806342842e0e146101c057600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109e8565b6102c4565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610316565b60405161010e9190610a55565b34801561014557600080fd5b50610159610154366004610a68565b6103a8565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a98565b6103e3565b005b34801561019257600080fd5b5060015460005403600019015b60405190815260200161010e565b6101846101bb366004610ac2565b6103f3565b6101846101ce366004610ac2565b610558565b3480156101df57600080fd5b506101596101ee366004610a68565b610578565b3480156101ff57600080fd5b5061019f61020e366004610afe565b610583565b34801561021f57600080fd5b5061012c6105c9565b34801561023457600080fd5b50610184610243366004610b19565b6105d8565b610184610256366004610b6b565b610644565b34801561026757600080fd5b5061012c610276366004610a68565b610685565b34801561028757600080fd5b50610102610296366004610c47565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f557506380ac58cd60e01b6001600160e01b03198316145b806103105750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032590610c7a565b80601f016020809104026020016040519081016040528092919081815260200182805461035190610c7a565b801561039e5780601f106103735761010080835404028352916020019161039e565b820191906000526020600020905b81548152906001019060200180831161038157829003601f168201915b5050505050905090565b60006103b38261070d565b6103c7576103c76333d1c03960e21b61075b565b506000908152600660205260409020546001600160a01b031690565b6103ef82826001610765565b5050565b60006103fe82610808565b6001600160a01b0394851694909150811684146104245761042462a1148160e81b61075b565b60008281526006602052604090208054338082146001600160a01b03881690911417610468576104548633610296565b61046857610468632ce44b5f60e11b61075b565b801561047357600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610505576001840160008181526004602052604081205490036105035760005481146105035760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361054f5761054f633a954ecd60e21b61075b565b50505050505050565b61057383838360405180602001604052806000815250610644565b505050565b600061031082610808565b60006001600160a01b0382166105a3576105a36323d3ad8160e21b61075b565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032590610c7a565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61064f8484846103f3565b6001600160a01b0383163b1561067f5761066b848484846108a9565b61067f5761067f6368d2bf6b60e11b61075b565b50505050565b60606106908261070d565b6106a4576106a4630a14c4b560e41b61075b565b60006106bb60408051602081019091526000815290565b905080516000036106db5760405180602001604052806000815250610706565b806106e58461098b565b6040516020016106f6929190610cb4565b6040516020818303038152906040525b9392505050565b600081600111610756576000548210156107565760005b506000828152600460205260408120549081900361074c5761074583610ce3565b9250610724565b600160e01b161590505b919050565b8060005260046000fd5b600061077083610578565b90508180156107885750336001600160a01b03821614155b156107ab576107978133610296565b6107ab576107ab6367d9dca160e11b61075b565b60008381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008160011161089957506000818152600460205260408120549081900361088657600054821061084357610843636f96cda160e11b61075b565b5b5060001901600081815260046020526040902054801561084457600160e01b811660000361087157919050565b610881636f96cda160e11b61075b565b610844565b600160e01b811660000361089957919050565b610756636f96cda160e11b61075b565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108de903390899088908890600401610d08565b6020604051808303816000875af1925050508015610919575060408051601f3d908101601f1916820190925261091691810190610d45565b60015b61096e573d808015610947576040519150601f19603f3d011682016040523d82523d6000602084013e61094c565b606091505b508051600003610966576109666368d2bf6b60e11b61075b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806109a55750819003601f19909101908152919050565b6001600160e01b0319811681146109e557600080fd5b50565b6000602082840312156109fa57600080fd5b8135610706816109cf565b60005b83811015610a20578181015183820152602001610a08565b50506000910152565b60008151808452610a41816020860160208601610a05565b601f01601f19169290920160200192915050565b6020815260006107066020830184610a29565b600060208284031215610a7a57600080fd5b5035919050565b80356001600160a01b038116811461075657600080fd5b60008060408385031215610aab57600080fd5b610ab483610a81565b946020939093013593505050565b600080600060608486031215610ad757600080fd5b610ae084610a81565b9250610aee60208501610a81565b9150604084013590509250925092565b600060208284031215610b1057600080fd5b61070682610a81565b60008060408385031215610b2c57600080fd5b610b3583610a81565b915060208301358015158114610b4a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b8157600080fd5b610b8a85610a81565b9350610b9860208601610a81565b925060408501359150606085013567ffffffffffffffff80821115610bbc57600080fd5b818701915087601f830112610bd057600080fd5b813581811115610be257610be2610b55565b604051601f8201601f19908116603f01168101908382118183101715610c0a57610c0a610b55565b816040528281528a6020848701011115610c2357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c5a57600080fd5b610c6383610a81565b9150610c7160208401610a81565b90509250929050565b600181811c90821680610c8e57607f821691505b602082108103610cae57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610cc6818460208801610a05565b835190830190610cda818360208801610a05565b01949350505050565b600081610d0057634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610d3b90830184610a29565b9695505050505050565b600060208284031215610d5757600080fd5b8151610706816109cf56fea26469706673582212206888bfff1ccd789706a9ef70dd2457efe80e4a6db3aaba7597d62d81bcd08fd964736f6c63430008110033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721A";
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }
  static readonly contractName: "ERC721A";
  public readonly contractName: "ERC721A";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
