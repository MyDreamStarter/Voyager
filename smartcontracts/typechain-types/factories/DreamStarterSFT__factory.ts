/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DreamStarterSFT,
  DreamStarterSFTInterface,
} from "../DreamStarterSFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601060809081526f111c99585b54dd185c9d195c8814d19560821b60a05260059062000031908262000158565b506040805180820190915260048152631114d19560e21b60208201526006906200005c908262000158565b503480156200006a57600080fd5b5060405162001d4238038062001d428339810160408190526200008d9162000224565b806200009981620000a1565b5050620002f9565b6002620000af828262000158565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000de57607f821691505b602082108103620000ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015357600081815260208120601f850160051c810160208610156200012e5750805b601f850160051c820191505b818110156200014f578281556001016200013a565b5050505b505050565b81516001600160401b03811115620001745762000174620000b3565b6200018c81620001858454620000c9565b8462000105565b602080601f831160018114620001c45760008415620001ab5750858301515b600019600386901b1c1916600185901b1785556200014f565b600085815260208120601f198616915b82811015620001f557888601518255948401946001909101908401620001d4565b5085821015620002145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083850312156200023857600080fd5b82516001600160401b03808211156200025057600080fd5b818501915085601f8301126200026557600080fd5b8151818111156200027a576200027a620000b3565b604051601f8201601f19908116603f01168101908382118183101715620002a557620002a5620000b3565b816040528281528886848701011115620002be57600080fd5b600093505b82841015620002e25784840186015181850187015292850192620002c3565b600086848301015280965050505050505092915050565b611a3980620003096000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80634f558e7911610097578063a986ac2f11610066578063a986ac2f14610216578063bd85b03914610229578063e985e9c514610249578063f242432a1461028557600080fd5b80634f558e79146101d057806361bc221a146101f257806395d89b41146101fb578063a22cb4651461020357600080fd5b80630e89341c116100d35780630e89341c14610177578063156e29f61461018a5780632eb2c2d61461019d5780634e1273f4146101b057600080fd5b8062fdd58e1461010457806301ffc9a71461012a57806302fe53051461014d57806306fdde0314610162575b600080fd5b61011761011236600461100a565b610298565b6040519081526020015b60405180910390f35b61013d61013836600461104a565b610331565b6040519015158152602001610121565b61016061015b36600461110f565b61033c565b005b61016a610348565b60405161012191906111a6565b61016a6101853660046111b9565b6103d6565b6101606101983660046111d2565b610478565b6101606101ab3660046112ba565b6104a4565b6101c36101be366004611364565b6104f0565b604051610121919061146a565b61013d6101de3660046111b9565b600090815260036020526040902054151590565b61011760045481565b61016a61061a565b61016061021136600461147d565b610627565b6101176102243660046114b9565b610636565b6101176102373660046111b9565b60009081526003602052604090205490565b61013d61025736600461151a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61016061029336600461154d565b61064d565b60006001600160a01b0383166103085760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b600061032b82610692565b610345816106e2565b50565b60058054610355906115b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610381906115b2565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b505050505081565b60008181526007602052604090208054606091906103f3906115b2565b80601f016020809104026020016040519081016040528092919081815260200182805461041f906115b2565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b50505050509050919050565b61049f8383836040518060400160405280600381526020016203078360ec1b8152506106ee565b505050565b6001600160a01b0385163314806104c057506104c08533610257565b6104dc5760405162461bcd60e51b81526004016102ff906115ec565b6104e98585858585610811565b5050505050565b606081518351146105555760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ff565b6000835167ffffffffffffffff8111156105715761057161106e565b60405190808252806020026020018201604052801561059a578160200160208202803683370190505b50905060005b8451811015610612576105e58582815181106105be576105be61163a565b60200260200101518583815181106105d8576105d861163a565b6020026020010151610298565b8282815181106105f7576105f761163a565b602090810291909101015261060b81611666565b90506105a0565b509392505050565b60068054610355906115b2565b6106323383836109fc565b5050565b6000610644858585856106ee565b50919392505050565b6001600160a01b03851633148061066957506106698533610257565b6106855760405162461bcd60e51b81526004016102ff906115ec565b6104e98585858585610adc565b60006001600160e01b03198216636cdb3d1360e11b14806106c357506001600160e01b031982166303a24d0760e21b145b8061032b57506301ffc9a760e01b6001600160e01b031983161461032b565b600261063282826116c5565b6001600160a01b03841661074e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102ff565b33600061075a85610c14565b9050600061076785610c14565b905061077883600089858589610c5f565b6000868152602081815260408083206001600160a01b038b168452909152812080548792906107a8908490611785565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461080883600089898989610dd8565b50505050505050565b81518351146108735760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102ff565b6001600160a01b0384166108995760405162461bcd60e51b81526004016102ff90611798565b336108a8818787878787610c5f565b60005b845181101561098e5760008582815181106108c8576108c861163a565b6020026020010151905060008583815181106108e6576108e661163a565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109365760405162461bcd60e51b81526004016102ff906117dd565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610973908490611785565b925050819055505050508061098790611666565b90506108ab565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109de929190611827565b60405180910390a46109f4818787878787610f33565b505050505050565b816001600160a01b0316836001600160a01b031603610a6f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ff565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b025760405162461bcd60e51b81526004016102ff90611798565b336000610b0e85610c14565b90506000610b1b85610c14565b9050610b2b838989858589610c5f565b6000868152602081815260408083206001600160a01b038c16845290915290205485811015610b6c5760405162461bcd60e51b81526004016102ff906117dd565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610ba9908490611785565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c09848a8a8a8a8a610dd8565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c4e57610c4e61163a565b602090810291909101015292915050565b6001600160a01b038516610ce65760005b8351811015610ce457828181518110610c8b57610c8b61163a565b602002602001015160036000868481518110610ca957610ca961163a565b602002602001015181526020019081526020016000206000828254610cce9190611785565b90915550610cdd905081611666565b9050610c70565b505b6001600160a01b0384166109f45760005b8351811015610808576000848281518110610d1457610d1461163a565b602002602001015190506000848381518110610d3257610d3261163a565b6020026020010151905060006003600084815260200190815260200160002054905081811015610db55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016102ff565b60009283526003602052604090922091039055610dd181611666565b9050610cf7565b6001600160a01b0384163b156109f45760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e1c9089908990889088908890600401611855565b6020604051808303816000875af1925050508015610e57575060408051601f3d908101601f19168201909252610e549181019061189a565b60015b610f0357610e636118b7565b806308c379a003610e9c5750610e776118d3565b80610e825750610e9e565b8060405162461bcd60e51b81526004016102ff91906111a6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ff565b6001600160e01b0319811663f23a6e6160e01b146108085760405162461bcd60e51b81526004016102ff9061195d565b6001600160a01b0384163b156109f45760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f7790899089908890889088906004016119a5565b6020604051808303816000875af1925050508015610fb2575060408051601f3d908101601f19168201909252610faf9181019061189a565b60015b610fbe57610e636118b7565b6001600160e01b0319811663bc197c8160e01b146108085760405162461bcd60e51b81526004016102ff9061195d565b80356001600160a01b038116811461100557600080fd5b919050565b6000806040838503121561101d57600080fd5b61102683610fee565b946020939093013593505050565b6001600160e01b03198116811461034557600080fd5b60006020828403121561105c57600080fd5b813561106781611034565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156110aa576110aa61106e565b6040525050565b600067ffffffffffffffff8311156110cb576110cb61106e565b6040516110e2601f8501601f191660200182611084565b8091508381528484840111156110f757600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561112157600080fd5b813567ffffffffffffffff81111561113857600080fd5b8201601f8101841361114957600080fd5b611158848235602084016110b1565b949350505050565b6000815180845260005b818110156111865760208185018101518683018201520161116a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110676020830184611160565b6000602082840312156111cb57600080fd5b5035919050565b6000806000606084860312156111e757600080fd5b6111f084610fee565b95602085013595506040909401359392505050565b600067ffffffffffffffff82111561121f5761121f61106e565b5060051b60200190565b600082601f83011261123a57600080fd5b8135602061124782611205565b6040516112548282611084565b83815260059390931b850182019282810191508684111561127457600080fd5b8286015b8481101561128f5780358352918301918301611278565b509695505050505050565b600082601f8301126112ab57600080fd5b611067838335602085016110b1565b600080600080600060a086880312156112d257600080fd5b6112db86610fee565b94506112e960208701610fee565b9350604086013567ffffffffffffffff8082111561130657600080fd5b61131289838a01611229565b9450606088013591508082111561132857600080fd5b61133489838a01611229565b9350608088013591508082111561134a57600080fd5b506113578882890161129a565b9150509295509295909350565b6000806040838503121561137757600080fd5b823567ffffffffffffffff8082111561138f57600080fd5b818501915085601f8301126113a357600080fd5b813560206113b082611205565b6040516113bd8282611084565b83815260059390931b85018201928281019150898411156113dd57600080fd5b948201945b83861015611402576113f386610fee565b825294820194908201906113e2565b9650508601359250508082111561141857600080fd5b5061142585828601611229565b9150509250929050565b600081518084526020808501945080840160005b8381101561145f57815187529582019590820190600101611443565b509495945050505050565b602081526000611067602083018461142f565b6000806040838503121561149057600080fd5b61149983610fee565b9150602083013580151581146114ae57600080fd5b809150509250929050565b600080600080608085870312156114cf57600080fd5b6114d885610fee565b93506020850135925060408501359150606085013567ffffffffffffffff81111561150257600080fd5b61150e8782880161129a565b91505092959194509250565b6000806040838503121561152d57600080fd5b61153683610fee565b915061154460208401610fee565b90509250929050565b600080600080600060a0868803121561156557600080fd5b61156e86610fee565b945061157c60208701610fee565b93506040860135925060608601359150608086013567ffffffffffffffff8111156115a657600080fd5b6113578882890161129a565b600181811c908216806115c657607f821691505b6020821081036115e657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161167857611678611650565b5060010190565b601f82111561049f57600081815260208120601f850160051c810160208610156116a65750805b601f850160051c820191505b818110156109f4578281556001016116b2565b815167ffffffffffffffff8111156116df576116df61106e565b6116f3816116ed84546115b2565b8461167f565b602080601f83116001811461172857600084156117105750858301515b600019600386901b1c1916600185901b1785556109f4565b600085815260208120601f198616915b8281101561175757888601518255948401946001909101908401611738565b50858210156117755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561032b5761032b611650565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061183a604083018561142f565b828103602084015261184c818561142f565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061188f90830184611160565b979650505050505050565b6000602082840312156118ac57600080fd5b815161106781611034565b600060033d11156118d05760046000803e5060005160e01c5b90565b600060443d10156118e15790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561191157505050505090565b82850191508151818111156119295750505050505090565b843d87010160208285010111156119435750505050505090565b61195260208286010187611084565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906119d19083018661142f565b82810360608401526119e3818661142f565b905082810360808401526119f78185611160565b9897505050505050505056fea26469706673582212203950314b5b50c60b981e063fb0163360673c904aac24423e223686a67115d28b64736f6c63430008110033";

type DreamStarterSFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DreamStarterSFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DreamStarterSFT__factory extends ContractFactory {
  constructor(...args: DreamStarterSFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DreamStarterSFT";
  }

  deploy(
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DreamStarterSFT> {
    return super.deploy(baseURI, overrides || {}) as Promise<DreamStarterSFT>;
  }
  getDeployTransaction(
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(baseURI, overrides || {});
  }
  attach(address: string): DreamStarterSFT {
    return super.attach(address) as DreamStarterSFT;
  }
  connect(signer: Signer): DreamStarterSFT__factory {
    return super.connect(signer) as DreamStarterSFT__factory;
  }
  static readonly contractName: "DreamStarterSFT";
  public readonly contractName: "DreamStarterSFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DreamStarterSFTInterface {
    return new utils.Interface(_abi) as DreamStarterSFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DreamStarterSFT {
    return new Contract(address, _abi, signerOrProvider) as DreamStarterSFT;
  }
}
